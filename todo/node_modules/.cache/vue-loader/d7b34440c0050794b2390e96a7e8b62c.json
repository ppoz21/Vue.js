{"remainingRequest":"/Users/ppoz21/Desktop/vue/todo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ppoz21/Desktop/vue/todo/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ppoz21/Desktop/vue/todo/src/App.vue","mtime":1584439196899},{"path":"/Users/ppoz21/Desktop/vue/todo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ppoz21/Desktop/vue/todo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ppoz21/Desktop/vue/todo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ppoz21/Desktop/vue/todo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQXBwJywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbmFtZTogIkFkYW0iLAogICAgICB0YXNrczogW10sCiAgICAgIGhpZGRlbkNvbXBsZXRlZDogdHJ1ZSwKICAgICAgbmV3SXRlbVRleHQ6ICIiLAogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGZpbHRyZWRUYXNrcygpIHsKICAgICAgcmV0dXJuIHRoaXMuaGlkZGVuQ29tcGxldGVkID8KICAgICAgICAgICAgICB0aGlzLnRhc2tzLmZpbHRlcih0ID0+ICF0LmRvbmUpIDogdGhpcy50YXNrcwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYWRkTmV3VG9kbygpIHsKICAgICAgdGhpcy50YXNrcy5wdXNoKHsKICAgICAgICBhY3Rpb246IHRoaXMubmV3SXRlbVRleHQsCiAgICAgICAgZG9uZTogZmFsc2UKICAgICAgfSk7CiAgICAgIHRoaXMuc3RvcmVEYXRhKCk7CiAgICAgIHRoaXMubmV3SXRlbVRleHQgPSAiIjsKICAgIH0sCiAgICBzdG9yZURhdGEoKSB7CiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJ0b2RvcyIsIEpTT04uc3RyaW5naWZ5KHRoaXMudGFza3MpKQogICAgfSwKICAgIGRlbGV0ZUNvbXBsZXRlZCgpIHsKICAgICAgdGhpcy50YXNrcyA9IHRoaXMudGFza3MuZmlsdGVyKHQgPT4gISB0LmRvbmUpOwogICAgICAKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICBsZXQgZGF0YSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ0b2RvcyIpOwogICAgaWYgKGRhdGEgIT0gbnVsbCkgewogICAgICB0aGlzLnRhc2tzID0gSlNPTi5wYXJzZShkYXRhKQogICAgfQogIH0KCn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <h4 class=\"bg-primary text-white text-center p-2\">\n      Lista zadań użytkownika {{name}}\n    </h4>\n    <div class=\"container-fluid p-4\">\n      <div class=\"row\" v-if=\"tasks.length == 0\">\n        <div class=\"col text-center\">\n          <b>Nie masz nic do zrobienia. Wspaniale!</b>\n        </div>\n      </div>\n      <template v-else>\n        <div class=\"row\">\n        <div class=\"col font-weight-bold\">Zadanie</div>\n        <div class=\"col-2 font-weight-bold\">Zakończono?</div>\n      </div>\n        <div class=\"row\" v-for=\"t in filtredTasks\" v-bind:key=\"t.action\">\n          <div class=\"col\">{{t.action}}</div>\n          <div class=\"col-2 text-center\">\n            <input type=\"checkbox\" v-model=\"t.done\" class=\"form-check-input\" />\n          </div>\n        </div>\n      </template>\n      <div class=\"row py-2\">\n        <div class=\"col\">\n          <input v-model=\"newItemText\" class=\"form-control\">\n        </div>\n        <div class=\"col-2\">\n          <button class=\"btn btn-primary\" v-on:click=\"addNewTodo\">Dodaj</button>\n        </div>\n      </div>\n      <div class=\"row bg-secondary py-2 mt-2 text-white\">\n        <div class=\"col text-center\">\n          <input type=\"checkbox\" v-model=\"hiddenCompleted\" class=\"form-check-input\" />\n          <label class=\"form-check-label font-weight-bold\">\n            Ukryj zakończone zadania\n          </label>\n        </div>\n        <div class=\"col text-center\">\n          <button class=\"btn btn-sm btn-warning\" v-on:click=\"deleteCompleted\">\n            Usuń zakończone\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      name: \"Adam\",\n      tasks: [],\n      hiddenCompleted: true,\n      newItemText: \"\",\n    }\n  },\n  computed: {\n    filtredTasks() {\n      return this.hiddenCompleted ?\n              this.tasks.filter(t => !t.done) : this.tasks\n    }\n  },\n  methods: {\n    addNewTodo() {\n      this.tasks.push({\n        action: this.newItemText,\n        done: false\n      });\n      this.storeData();\n      this.newItemText = \"\";\n    },\n    storeData() {\n      localStorage.setItem(\"todos\", JSON.stringify(this.tasks))\n    },\n    deleteCompleted() {\n      this.tasks = this.tasks.filter(t => ! t.done);\n      \n    }\n  },\n  created() {\n    let data = localStorage.getItem(\"todos\");\n    if (data != null) {\n      this.tasks = JSON.parse(data)\n    }\n  }\n\n}\n</script>\n"]}]}